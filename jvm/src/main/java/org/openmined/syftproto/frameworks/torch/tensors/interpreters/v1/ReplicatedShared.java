// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: syft_proto/frameworks/torch/tensors/interpreters/v1/replicated_shared.proto

package org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1;

public final class ReplicatedShared {
  private ReplicatedShared() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ReplicatedSharingTensorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:syft_proto.frameworks.torch.tensors.interpreters.v1.ReplicatedSharingTensor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
     * @return The id.
     */
    org.openmined.syftproto.types.syft.v1.IdOuterClass.Id getId();
    /**
     * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
     */
    org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder getIdOrBuilder();

    /**
     * <code>int64 ring_int = 2[json_name = "ringInt"];</code>
     * @return The ringInt.
     */
    long getRingInt();

    /**
     * <code>string ring_str = 3[json_name = "ringStr"];</code>
     * @return The ringStr.
     */
    java.lang.String getRingStr();
    /**
     * <code>string ring_str = 3[json_name = "ringStr"];</code>
     * @return The bytes for ringStr.
     */
    com.google.protobuf.ByteString
        getRingStrBytes();

    /**
     * <code>string dtype = 4[json_name = "dtype"];</code>
     * @return The dtype.
     */
    java.lang.String getDtype();
    /**
     * <code>string dtype = 4[json_name = "dtype"];</code>
     * @return The bytes for dtype.
     */
    com.google.protobuf.ByteString
        getDtypeBytes();

    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    java.util.List<org.openmined.syftproto.types.syft.v1.IdOuterClass.Id> 
        getLocationIdsList();
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    org.openmined.syftproto.types.syft.v1.IdOuterClass.Id getLocationIds(int index);
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    int getLocationIdsCount();
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    java.util.List<? extends org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder> 
        getLocationIdsOrBuilderList();
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder getLocationIdsOrBuilder(
        int index);

    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    java.util.List<org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor> 
        getSharesList();
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor getShares(int index);
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    int getSharesCount();
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    java.util.List<? extends org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder> 
        getSharesOrBuilderList();
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder getSharesOrBuilder(
        int index);

    public org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor.RingSizeCase getRingSizeCase();
  }
  /**
   * Protobuf type {@code syft_proto.frameworks.torch.tensors.interpreters.v1.ReplicatedSharingTensor}
   */
  public static final class ReplicatedSharingTensor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:syft_proto.frameworks.torch.tensors.interpreters.v1.ReplicatedSharingTensor)
      ReplicatedSharingTensorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReplicatedSharingTensor.newBuilder() to construct.
    private ReplicatedSharingTensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReplicatedSharingTensor() {
      dtype_ = "";
      locationIds_ = java.util.Collections.emptyList();
      shares_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReplicatedSharingTensor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReplicatedSharingTensor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder subBuilder = null;
              if (id_ != null) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              ringSizeCase_ = 2;
              ringSize_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ringSizeCase_ = 3;
              ringSize_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              dtype_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                locationIds_ = new java.util.ArrayList<org.openmined.syftproto.types.syft.v1.IdOuterClass.Id>();
                mutable_bitField0_ |= 0x00000001;
              }
              locationIds_.add(
                  input.readMessage(org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                shares_ = new java.util.ArrayList<org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor>();
                mutable_bitField0_ |= 0x00000002;
              }
              shares_.add(
                  input.readMessage(org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          locationIds_ = java.util.Collections.unmodifiableList(locationIds_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          shares_ = java.util.Collections.unmodifiableList(shares_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor.class, org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor.Builder.class);
    }

    private int ringSizeCase_ = 0;
    private java.lang.Object ringSize_;
    public enum RingSizeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RING_INT(2),
      RING_STR(3),
      RINGSIZE_NOT_SET(0);
      private final int value;
      private RingSizeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RingSizeCase valueOf(int value) {
        return forNumber(value);
      }

      public static RingSizeCase forNumber(int value) {
        switch (value) {
          case 2: return RING_INT;
          case 3: return RING_STR;
          case 0: return RINGSIZE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RingSizeCase
    getRingSizeCase() {
      return RingSizeCase.forNumber(
          ringSizeCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private org.openmined.syftproto.types.syft.v1.IdOuterClass.Id id_;
    /**
     * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return id_ != null;
    }
    /**
     * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public org.openmined.syftproto.types.syft.v1.IdOuterClass.Id getId() {
      return id_ == null ? org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.getDefaultInstance() : id_;
    }
    /**
     * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
     */
    @java.lang.Override
    public org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder getIdOrBuilder() {
      return getId();
    }

    public static final int RING_INT_FIELD_NUMBER = 2;
    /**
     * <code>int64 ring_int = 2[json_name = "ringInt"];</code>
     * @return The ringInt.
     */
    @java.lang.Override
    public long getRingInt() {
      if (ringSizeCase_ == 2) {
        return (java.lang.Long) ringSize_;
      }
      return 0L;
    }

    public static final int RING_STR_FIELD_NUMBER = 3;
    /**
     * <code>string ring_str = 3[json_name = "ringStr"];</code>
     * @return The ringStr.
     */
    public java.lang.String getRingStr() {
      java.lang.Object ref = "";
      if (ringSizeCase_ == 3) {
        ref = ringSize_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (ringSizeCase_ == 3) {
          ringSize_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string ring_str = 3[json_name = "ringStr"];</code>
     * @return The bytes for ringStr.
     */
    public com.google.protobuf.ByteString
        getRingStrBytes() {
      java.lang.Object ref = "";
      if (ringSizeCase_ == 3) {
        ref = ringSize_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (ringSizeCase_ == 3) {
          ringSize_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DTYPE_FIELD_NUMBER = 4;
    private volatile java.lang.Object dtype_;
    /**
     * <code>string dtype = 4[json_name = "dtype"];</code>
     * @return The dtype.
     */
    @java.lang.Override
    public java.lang.String getDtype() {
      java.lang.Object ref = dtype_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dtype_ = s;
        return s;
      }
    }
    /**
     * <code>string dtype = 4[json_name = "dtype"];</code>
     * @return The bytes for dtype.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDtypeBytes() {
      java.lang.Object ref = dtype_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dtype_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCATION_IDS_FIELD_NUMBER = 5;
    private java.util.List<org.openmined.syftproto.types.syft.v1.IdOuterClass.Id> locationIds_;
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    @java.lang.Override
    public java.util.List<org.openmined.syftproto.types.syft.v1.IdOuterClass.Id> getLocationIdsList() {
      return locationIds_;
    }
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder> 
        getLocationIdsOrBuilderList() {
      return locationIds_;
    }
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    @java.lang.Override
    public int getLocationIdsCount() {
      return locationIds_.size();
    }
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    @java.lang.Override
    public org.openmined.syftproto.types.syft.v1.IdOuterClass.Id getLocationIds(int index) {
      return locationIds_.get(index);
    }
    /**
     * <pre>
     * It would be natural to capture a {location_id-&gt;share} dictionary
     * as a map, but the key types of a map can't be messages. The ids
     * use the Id type because they can be either integers or strings.
     * Capturing them as two parallel lists/arrays isn't ideal but ought
     * to work okay (given that constraint.)
     * </pre>
     *
     * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
     */
    @java.lang.Override
    public org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder getLocationIdsOrBuilder(
        int index) {
      return locationIds_.get(index);
    }

    public static final int SHARES_FIELD_NUMBER = 6;
    private java.util.List<org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor> shares_;
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    @java.lang.Override
    public java.util.List<org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor> getSharesList() {
      return shares_;
    }
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder> 
        getSharesOrBuilderList() {
      return shares_;
    }
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    @java.lang.Override
    public int getSharesCount() {
      return shares_.size();
    }
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    @java.lang.Override
    public org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor getShares(int index) {
      return shares_.get(index);
    }
    /**
     * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
     */
    @java.lang.Override
    public org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder getSharesOrBuilder(
        int index) {
      return shares_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != null) {
        output.writeMessage(1, getId());
      }
      if (ringSizeCase_ == 2) {
        output.writeInt64(
            2, (long)((java.lang.Long) ringSize_));
      }
      if (ringSizeCase_ == 3) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ringSize_);
      }
      if (!getDtypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, dtype_);
      }
      for (int i = 0; i < locationIds_.size(); i++) {
        output.writeMessage(5, locationIds_.get(i));
      }
      for (int i = 0; i < shares_.size(); i++) {
        output.writeMessage(6, shares_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      if (ringSizeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              2, (long)((java.lang.Long) ringSize_));
      }
      if (ringSizeCase_ == 3) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ringSize_);
      }
      if (!getDtypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, dtype_);
      }
      for (int i = 0; i < locationIds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, locationIds_.get(i));
      }
      for (int i = 0; i < shares_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, shares_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor)) {
        return super.equals(obj);
      }
      org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor other = (org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (!getDtype()
          .equals(other.getDtype())) return false;
      if (!getLocationIdsList()
          .equals(other.getLocationIdsList())) return false;
      if (!getSharesList()
          .equals(other.getSharesList())) return false;
      if (!getRingSizeCase().equals(other.getRingSizeCase())) return false;
      switch (ringSizeCase_) {
        case 2:
          if (getRingInt()
              != other.getRingInt()) return false;
          break;
        case 3:
          if (!getRingStr()
              .equals(other.getRingStr())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDtype().hashCode();
      if (getLocationIdsCount() > 0) {
        hash = (37 * hash) + LOCATION_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getLocationIdsList().hashCode();
      }
      if (getSharesCount() > 0) {
        hash = (37 * hash) + SHARES_FIELD_NUMBER;
        hash = (53 * hash) + getSharesList().hashCode();
      }
      switch (ringSizeCase_) {
        case 2:
          hash = (37 * hash) + RING_INT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getRingInt());
          break;
        case 3:
          hash = (37 * hash) + RING_STR_FIELD_NUMBER;
          hash = (53 * hash) + getRingStr().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code syft_proto.frameworks.torch.tensors.interpreters.v1.ReplicatedSharingTensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:syft_proto.frameworks.torch.tensors.interpreters.v1.ReplicatedSharingTensor)
        org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor.class, org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor.Builder.class);
      }

      // Construct using org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLocationIdsFieldBuilder();
          getSharesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = null;
        } else {
          id_ = null;
          idBuilder_ = null;
        }
        dtype_ = "";

        if (locationIdsBuilder_ == null) {
          locationIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          locationIdsBuilder_.clear();
        }
        if (sharesBuilder_ == null) {
          shares_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sharesBuilder_.clear();
        }
        ringSizeCase_ = 0;
        ringSize_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_descriptor;
      }

      @java.lang.Override
      public org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor getDefaultInstanceForType() {
        return org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor.getDefaultInstance();
      }

      @java.lang.Override
      public org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor build() {
        org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor buildPartial() {
        org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor result = new org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor(this);
        int from_bitField0_ = bitField0_;
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (ringSizeCase_ == 2) {
          result.ringSize_ = ringSize_;
        }
        if (ringSizeCase_ == 3) {
          result.ringSize_ = ringSize_;
        }
        result.dtype_ = dtype_;
        if (locationIdsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            locationIds_ = java.util.Collections.unmodifiableList(locationIds_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.locationIds_ = locationIds_;
        } else {
          result.locationIds_ = locationIdsBuilder_.build();
        }
        if (sharesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            shares_ = java.util.Collections.unmodifiableList(shares_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.shares_ = shares_;
        } else {
          result.shares_ = sharesBuilder_.build();
        }
        result.ringSizeCase_ = ringSizeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor) {
          return mergeFrom((org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor other) {
        if (other == org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (!other.getDtype().isEmpty()) {
          dtype_ = other.dtype_;
          onChanged();
        }
        if (locationIdsBuilder_ == null) {
          if (!other.locationIds_.isEmpty()) {
            if (locationIds_.isEmpty()) {
              locationIds_ = other.locationIds_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLocationIdsIsMutable();
              locationIds_.addAll(other.locationIds_);
            }
            onChanged();
          }
        } else {
          if (!other.locationIds_.isEmpty()) {
            if (locationIdsBuilder_.isEmpty()) {
              locationIdsBuilder_.dispose();
              locationIdsBuilder_ = null;
              locationIds_ = other.locationIds_;
              bitField0_ = (bitField0_ & ~0x00000001);
              locationIdsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLocationIdsFieldBuilder() : null;
            } else {
              locationIdsBuilder_.addAllMessages(other.locationIds_);
            }
          }
        }
        if (sharesBuilder_ == null) {
          if (!other.shares_.isEmpty()) {
            if (shares_.isEmpty()) {
              shares_ = other.shares_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSharesIsMutable();
              shares_.addAll(other.shares_);
            }
            onChanged();
          }
        } else {
          if (!other.shares_.isEmpty()) {
            if (sharesBuilder_.isEmpty()) {
              sharesBuilder_.dispose();
              sharesBuilder_ = null;
              shares_ = other.shares_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sharesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSharesFieldBuilder() : null;
            } else {
              sharesBuilder_.addAllMessages(other.shares_);
            }
          }
        }
        switch (other.getRingSizeCase()) {
          case RING_INT: {
            setRingInt(other.getRingInt());
            break;
          }
          case RING_STR: {
            ringSizeCase_ = 3;
            ringSize_ = other.ringSize_;
            onChanged();
            break;
          }
          case RINGSIZE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int ringSizeCase_ = 0;
      private java.lang.Object ringSize_;
      public RingSizeCase
          getRingSizeCase() {
        return RingSizeCase.forNumber(
            ringSizeCase_);
      }

      public Builder clearRingSize() {
        ringSizeCase_ = 0;
        ringSize_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private org.openmined.syftproto.types.syft.v1.IdOuterClass.Id id_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openmined.syftproto.types.syft.v1.IdOuterClass.Id, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder, org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder> idBuilder_;
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return idBuilder_ != null || id_ != null;
      }
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       * @return The id.
       */
      public org.openmined.syftproto.types.syft.v1.IdOuterClass.Id getId() {
        if (idBuilder_ == null) {
          return id_ == null ? org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       */
      public Builder setId(org.openmined.syftproto.types.syft.v1.IdOuterClass.Id value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       */
      public Builder setId(
          org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       */
      public Builder mergeId(org.openmined.syftproto.types.syft.v1.IdOuterClass.Id value) {
        if (idBuilder_ == null) {
          if (id_ != null) {
            id_ =
              org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          id_ = null;
          idBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       */
      public org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder getIdBuilder() {
        
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       */
      public org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.getDefaultInstance() : id_;
        }
      }
      /**
       * <code>.syft_proto.types.syft.v1.Id id = 1[json_name = "id"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openmined.syftproto.types.syft.v1.IdOuterClass.Id, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder, org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openmined.syftproto.types.syft.v1.IdOuterClass.Id, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder, org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      /**
       * <code>int64 ring_int = 2[json_name = "ringInt"];</code>
       * @return The ringInt.
       */
      public long getRingInt() {
        if (ringSizeCase_ == 2) {
          return (java.lang.Long) ringSize_;
        }
        return 0L;
      }
      /**
       * <code>int64 ring_int = 2[json_name = "ringInt"];</code>
       * @param value The ringInt to set.
       * @return This builder for chaining.
       */
      public Builder setRingInt(long value) {
        ringSizeCase_ = 2;
        ringSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 ring_int = 2[json_name = "ringInt"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRingInt() {
        if (ringSizeCase_ == 2) {
          ringSizeCase_ = 0;
          ringSize_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string ring_str = 3[json_name = "ringStr"];</code>
       * @return The ringStr.
       */
      @java.lang.Override
      public java.lang.String getRingStr() {
        java.lang.Object ref = "";
        if (ringSizeCase_ == 3) {
          ref = ringSize_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (ringSizeCase_ == 3) {
            ringSize_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string ring_str = 3[json_name = "ringStr"];</code>
       * @return The bytes for ringStr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRingStrBytes() {
        java.lang.Object ref = "";
        if (ringSizeCase_ == 3) {
          ref = ringSize_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (ringSizeCase_ == 3) {
            ringSize_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string ring_str = 3[json_name = "ringStr"];</code>
       * @param value The ringStr to set.
       * @return This builder for chaining.
       */
      public Builder setRingStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ringSizeCase_ = 3;
        ringSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string ring_str = 3[json_name = "ringStr"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRingStr() {
        if (ringSizeCase_ == 3) {
          ringSizeCase_ = 0;
          ringSize_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string ring_str = 3[json_name = "ringStr"];</code>
       * @param value The bytes for ringStr to set.
       * @return This builder for chaining.
       */
      public Builder setRingStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ringSizeCase_ = 3;
        ringSize_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dtype_ = "";
      /**
       * <code>string dtype = 4[json_name = "dtype"];</code>
       * @return The dtype.
       */
      public java.lang.String getDtype() {
        java.lang.Object ref = dtype_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dtype_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string dtype = 4[json_name = "dtype"];</code>
       * @return The bytes for dtype.
       */
      public com.google.protobuf.ByteString
          getDtypeBytes() {
        java.lang.Object ref = dtype_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dtype_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string dtype = 4[json_name = "dtype"];</code>
       * @param value The dtype to set.
       * @return This builder for chaining.
       */
      public Builder setDtype(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string dtype = 4[json_name = "dtype"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDtype() {
        
        dtype_ = getDefaultInstance().getDtype();
        onChanged();
        return this;
      }
      /**
       * <code>string dtype = 4[json_name = "dtype"];</code>
       * @param value The bytes for dtype to set.
       * @return This builder for chaining.
       */
      public Builder setDtypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dtype_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.openmined.syftproto.types.syft.v1.IdOuterClass.Id> locationIds_ =
        java.util.Collections.emptyList();
      private void ensureLocationIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          locationIds_ = new java.util.ArrayList<org.openmined.syftproto.types.syft.v1.IdOuterClass.Id>(locationIds_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openmined.syftproto.types.syft.v1.IdOuterClass.Id, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder, org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder> locationIdsBuilder_;

      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public java.util.List<org.openmined.syftproto.types.syft.v1.IdOuterClass.Id> getLocationIdsList() {
        if (locationIdsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(locationIds_);
        } else {
          return locationIdsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public int getLocationIdsCount() {
        if (locationIdsBuilder_ == null) {
          return locationIds_.size();
        } else {
          return locationIdsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public org.openmined.syftproto.types.syft.v1.IdOuterClass.Id getLocationIds(int index) {
        if (locationIdsBuilder_ == null) {
          return locationIds_.get(index);
        } else {
          return locationIdsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder setLocationIds(
          int index, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id value) {
        if (locationIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationIdsIsMutable();
          locationIds_.set(index, value);
          onChanged();
        } else {
          locationIdsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder setLocationIds(
          int index, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder builderForValue) {
        if (locationIdsBuilder_ == null) {
          ensureLocationIdsIsMutable();
          locationIds_.set(index, builderForValue.build());
          onChanged();
        } else {
          locationIdsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder addLocationIds(org.openmined.syftproto.types.syft.v1.IdOuterClass.Id value) {
        if (locationIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationIdsIsMutable();
          locationIds_.add(value);
          onChanged();
        } else {
          locationIdsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder addLocationIds(
          int index, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id value) {
        if (locationIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationIdsIsMutable();
          locationIds_.add(index, value);
          onChanged();
        } else {
          locationIdsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder addLocationIds(
          org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder builderForValue) {
        if (locationIdsBuilder_ == null) {
          ensureLocationIdsIsMutable();
          locationIds_.add(builderForValue.build());
          onChanged();
        } else {
          locationIdsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder addLocationIds(
          int index, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder builderForValue) {
        if (locationIdsBuilder_ == null) {
          ensureLocationIdsIsMutable();
          locationIds_.add(index, builderForValue.build());
          onChanged();
        } else {
          locationIdsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder addAllLocationIds(
          java.lang.Iterable<? extends org.openmined.syftproto.types.syft.v1.IdOuterClass.Id> values) {
        if (locationIdsBuilder_ == null) {
          ensureLocationIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, locationIds_);
          onChanged();
        } else {
          locationIdsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder clearLocationIds() {
        if (locationIdsBuilder_ == null) {
          locationIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          locationIdsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public Builder removeLocationIds(int index) {
        if (locationIdsBuilder_ == null) {
          ensureLocationIdsIsMutable();
          locationIds_.remove(index);
          onChanged();
        } else {
          locationIdsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder getLocationIdsBuilder(
          int index) {
        return getLocationIdsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder getLocationIdsOrBuilder(
          int index) {
        if (locationIdsBuilder_ == null) {
          return locationIds_.get(index);  } else {
          return locationIdsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public java.util.List<? extends org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder> 
           getLocationIdsOrBuilderList() {
        if (locationIdsBuilder_ != null) {
          return locationIdsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(locationIds_);
        }
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder addLocationIdsBuilder() {
        return getLocationIdsFieldBuilder().addBuilder(
            org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.getDefaultInstance());
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder addLocationIdsBuilder(
          int index) {
        return getLocationIdsFieldBuilder().addBuilder(
            index, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.getDefaultInstance());
      }
      /**
       * <pre>
       * It would be natural to capture a {location_id-&gt;share} dictionary
       * as a map, but the key types of a map can't be messages. The ids
       * use the Id type because they can be either integers or strings.
       * Capturing them as two parallel lists/arrays isn't ideal but ought
       * to work okay (given that constraint.)
       * </pre>
       *
       * <code>repeated .syft_proto.types.syft.v1.Id location_ids = 5[json_name = "locationIds"];</code>
       */
      public java.util.List<org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder> 
           getLocationIdsBuilderList() {
        return getLocationIdsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openmined.syftproto.types.syft.v1.IdOuterClass.Id, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder, org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder> 
          getLocationIdsFieldBuilder() {
        if (locationIdsBuilder_ == null) {
          locationIdsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openmined.syftproto.types.syft.v1.IdOuterClass.Id, org.openmined.syftproto.types.syft.v1.IdOuterClass.Id.Builder, org.openmined.syftproto.types.syft.v1.IdOuterClass.IdOrBuilder>(
                  locationIds_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          locationIds_ = null;
        }
        return locationIdsBuilder_;
      }

      private java.util.List<org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor> shares_ =
        java.util.Collections.emptyList();
      private void ensureSharesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          shares_ = new java.util.ArrayList<org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor>(shares_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder> sharesBuilder_;

      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public java.util.List<org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor> getSharesList() {
        if (sharesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shares_);
        } else {
          return sharesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public int getSharesCount() {
        if (sharesBuilder_ == null) {
          return shares_.size();
        } else {
          return sharesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor getShares(int index) {
        if (sharesBuilder_ == null) {
          return shares_.get(index);
        } else {
          return sharesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder setShares(
          int index, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.set(index, value);
          onChanged();
        } else {
          sharesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder setShares(
          int index, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.set(index, builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder addShares(org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.add(value);
          onChanged();
        } else {
          sharesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder addShares(
          int index, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor value) {
        if (sharesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSharesIsMutable();
          shares_.add(index, value);
          onChanged();
        } else {
          sharesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder addShares(
          org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.add(builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder addShares(
          int index, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder builderForValue) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.add(index, builderForValue.build());
          onChanged();
        } else {
          sharesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder addAllShares(
          java.lang.Iterable<? extends org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor> values) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shares_);
          onChanged();
        } else {
          sharesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder clearShares() {
        if (sharesBuilder_ == null) {
          shares_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sharesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public Builder removeShares(int index) {
        if (sharesBuilder_ == null) {
          ensureSharesIsMutable();
          shares_.remove(index);
          onChanged();
        } else {
          sharesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder getSharesBuilder(
          int index) {
        return getSharesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder getSharesOrBuilder(
          int index) {
        if (sharesBuilder_ == null) {
          return shares_.get(index);  } else {
          return sharesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public java.util.List<? extends org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder> 
           getSharesOrBuilderList() {
        if (sharesBuilder_ != null) {
          return sharesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shares_);
        }
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder addSharesBuilder() {
        return getSharesFieldBuilder().addBuilder(
            org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.getDefaultInstance());
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder addSharesBuilder(
          int index) {
        return getSharesFieldBuilder().addBuilder(
            index, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.getDefaultInstance());
      }
      /**
       * <code>repeated .syft_proto.generic.pointers.v1.PointerTensor shares = 6[json_name = "shares"];</code>
       */
      public java.util.List<org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder> 
           getSharesBuilderList() {
        return getSharesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder> 
          getSharesFieldBuilder() {
        if (sharesBuilder_ == null) {
          sharesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensor.Builder, org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.PointerTensorOrBuilder>(
                  shares_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          shares_ = null;
        }
        return sharesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:syft_proto.frameworks.torch.tensors.interpreters.v1.ReplicatedSharingTensor)
    }

    // @@protoc_insertion_point(class_scope:syft_proto.frameworks.torch.tensors.interpreters.v1.ReplicatedSharingTensor)
    private static final org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor();
    }

    public static org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReplicatedSharingTensor>
        PARSER = new com.google.protobuf.AbstractParser<ReplicatedSharingTensor>() {
      @java.lang.Override
      public ReplicatedSharingTensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReplicatedSharingTensor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReplicatedSharingTensor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReplicatedSharingTensor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openmined.syftproto.frameworks.torch.tensors.interpreters.v1.ReplicatedShared.ReplicatedSharingTensor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nKsyft_proto/frameworks/torch/tensors/in" +
      "terpreters/v1/replicated_shared.proto\0223s" +
      "yft_proto.frameworks.torch.tensors.inter" +
      "preters.v1\0323syft_proto/generic/pointers/" +
      "v1/pointer_tensor.proto\032!syft_proto/type" +
      "s/syft/v1/id.proto\"\254\002\n\027ReplicatedSharing" +
      "Tensor\022,\n\002id\030\001 \001(\0132\034.syft_proto.types.sy" +
      "ft.v1.IdR\002id\022\033\n\010ring_int\030\002 \001(\003H\000R\007ringIn" +
      "t\022\033\n\010ring_str\030\003 \001(\tH\000R\007ringStr\022\024\n\005dtype\030" +
      "\004 \001(\tR\005dtype\022?\n\014location_ids\030\005 \003(\0132\034.syf" +
      "t_proto.types.syft.v1.IdR\013locationIds\022E\n" +
      "\006shares\030\006 \003(\0132-.syft_proto.generic.point" +
      "ers.v1.PointerTensorR\006sharesB\013\n\tring_siz" +
      "eBB\n@org.openmined.syftproto.frameworks." +
      "torch.tensors.interpreters.v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.getDescriptor(),
          org.openmined.syftproto.types.syft.v1.IdOuterClass.getDescriptor(),
        });
    internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_syft_proto_frameworks_torch_tensors_interpreters_v1_ReplicatedSharingTensor_descriptor,
        new java.lang.String[] { "Id", "RingInt", "RingStr", "Dtype", "LocationIds", "Shares", "RingSize", });
    org.openmined.syftproto.generic.pointers.v1.PointerTensorOuterClass.getDescriptor();
    org.openmined.syftproto.types.syft.v1.IdOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
