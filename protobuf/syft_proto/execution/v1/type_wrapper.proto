syntax = "proto3";

package syft_proto.execution.v1;
option java_package = "org.openmined.syftproto.execution.v1";

message InputTypeDescriptor {
    /*
        A type contains the serialization id and string bytes.
    */
    string type_name = 1;
}

message NestedTypeWrapper {
    /*
    Message to bufferize a nested type. In a nested type we can have:
        1. A type.
        2. A list of nested types.
        3. A tuple of nested types.
        4. A dict of nested types.
    */

    //Wrapper to simulate the behavior of a list in oneof.
    message TypeList {
        repeated NestedTypeWrapper nested_types = 1;
    }

    //Wrapper to simulate the behavior of a tuple in oneof.
    message TypeTuple {
        repeated NestedTypeWrapper nested_types = 1;
    }

    //Wrapper to simulate the behavior of a map in oneof.
    message TypeMap {
        map<string, NestedTypeWrapper> nested_types = 1;
    }

    // To create the behavior described above, we need a new message, as
    // oneof will not permit repeated fields.
    message TypeContainer {
        oneof nested_container {
            // First scenario, acts like a list with one element, the type.
            InputTypeDescriptor nested_type = 1;

            // Second scenario, a list of possibly nested elements.
            TypeList nested_type_list = 2;

            // Third scenario, a tuple of possibly nested elements.
            TypeTuple nested_type_tuple = 3;

            // Last scenario, a dict of possible nested elements.
            TypeMap nested_type_dict = 4;
        }
    }

    TypeContainer nested_types = 1;
}
